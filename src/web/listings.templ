package web;

import (
	"strconv"
	"github.com/emanueldonalds/property-viewer/db"
	"github.com/emanueldonalds/property-viewer/formatters"
)

func getRowClass(deleted bool) string {
	if deleted {
		return "disabled"
	}
	return ""
}

templ Listings(listings []db.Listing, lastScrape db.ScrapeEvent) {
	<div id="metadata">
		Rows: { strconv.Itoa(len(listings)) }
		&emsp;
		Updated: { formatters.FormatDateTime(lastScrape.Date) }
		&emsp;
		<a href="https://github.com/emanueldonalds/property-viewer">Source code</a>
		&emsp;
		<a href="/rss">RSS feed</a>
	</div>
	<table id="listings-table">
		<thead>
			<tr>
				<th><a class="sortable" onclick="sort('address')">Address</a></th>
				<th><a class="sortable" onclick="sort('price')">Price</a></th>
				<th><a class="sortable" onclick="sort('size_value')">Area</a></th>
				<th><a class="sortable" onclick="sort('price_over_area')">Price/m2</a></th>
				<th><a class="sortable" onclick="sort('rooms')">Rooms</a></th>
				<th><a class="sortable" onclick="sort('build_year')">Year</a></th>
				<th>Old price</th>
				<th><a class="sortable" onclick="sort('first_seen')">First seen</a></th>
				<th><a class="sortable" onclick="sort('agency')">Agency</a></th>
				<th><a class="sortable" onclick="sort('url')">Url</a></th>
			</tr>
		</thead>
		<tbody>
			for _, x := range listings {
				<tr class={ getRowClass(x.Deleted) }>
					<td class="address" title={ x.Address }>{ x.Address }</td>
					<td>{ formatters.FormatPrice(x.Price) }</td>
					<td>{ formatters.FormatInt(x.Size.Value) } { x.Size.Unit }</td>
					<td>{ formatters.FormatPrice(x.PriceOverArea) } </td>
					<td>{ formatters.FormatInt(x.Rooms) }</td>
					<td>{ formatters.FormatInt(x.Year) }</td>
					<td>{ formatters.FormatPrevPrice(x.PriceHistory) }</td>
					<td>{ formatters.FormatDate(x.FirstSeen) }</td>
					<td>{ x.Agency }</td>
					<td><a href={ templ.URL(x.Url) }>{ x.Url }</a></td>
				</tr>
			}
		</tbody>
	</table>
}
