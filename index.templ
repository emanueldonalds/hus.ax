package main 

import (
	"strconv"
	"fmt"
	"time"
)

templ index(listings []Listing) {
	<script src="https://unpkg.com/htmx.org@1.9.12"></script>
	<style>
        body {
          display: flex;
          max-width: 2vw;
        }

      #search {
        display: flex;
        flex-direction: column;
        margin-right: 20px;
      }

      input, select {
        margin-bottom: 10px;
      }

      .sorting {
        color: inherit;
        text-decoration: none;
      }
      .sorting:visited {
        color: inherit;
      }
      .sorting:hover {
        color: gray;
      }
    </style>
	<html>
		<head></head>
		<body>
			<form id="search" action="/">
				<h1>Hus.ax</h1>
				<label for="agency">Agency</label>
				<select id="agency" name="agency">
					<option value="">All</option>
					<option>MÃ¤klarhuset</option>
					<option>Lyyski</option>
					<option>Aktia LKV</option>
					<option>Din Fastighet</option>
				</select>
				<label for="price_min">Price min</label>
				<input id="price_min" name="price_min" type="number"/>
				<label for="price_min">Price max</label>
				<input id="price_max" name="price_max" type="number"/>
				<label for="year_min">Year min</label>
				<input id="year_min" name="year_min" type="number"/>
				<label for="year_max">Year max</label>
				<input id="year_max" name="year_max" type="number"/>
				<label for="size_value_min">Area min</label>
				<input id="size_value_min" name="size_value_min" type="number"/>
				<label for="size_value_max">Area max</label>
				<input id="size_value_max" name="size_value_max" type="number"/>
				<label for="price_over_area_min">Price/Area min</label>
				<input id="price_over_area_min" name="price_over_area_min" type="number"/>
				<label for="price_over_area_max">Price/Area max</label>
				<input id="price_over_area_max" name="price_over_area_max" type="number"/>
				<label for="include_deleted">Include deleted</label>
				<input id="include_deleted" name="include_deleted" type="checkbox" value="true"/>
				<input type="hidden" id="order_by" name="order_by"/>
				<input type="hidden" id="sort_order" name="sort_order"/>
				<button type="submit">Search</button>
			</form>
			<div id="result"></div>
			<table style="width: 100%;white-space: nowrap;">
				<thead>
					<tr>
						<th><a class="sorting" href="#" onclick="sort('address')">Address</a></th>
						<th><a class="sorting" href="#" onclick="sort('price')">Price</a></th>
						<th><a class="sorting" href="#" onclick="sort('size_value')">Area</a></th>
						<th><a class="sorting" href="#" onclick="sort('rooms')">Rooms</a></th>
						<th><a class="sorting" href="#" onclick="sort('year')">Year</a></th>
						<th>Price/Area</th>
						<th><a class="sorting" href="#" onclick="sort('first_seen')">First seen</a></th>
						<th><a class="sorting" href="#" onclick="sort('agency')">Agency</a></th>
						<th><a class="sorting" href="#" onclick="sort('url')">Url</a></th>
					</tr>
				</thead>
				<tbody style="font-size: 12px;">
					for _, x := range listings {
						<tr>
							<td>{ x.address }</td>
							<td>{ formatInt(x.price) }</td>
							<td>{ formatFloat(x.size.value) } { x.size.unit }</td>
							<td>{ formatInt(x.rooms) }</td>
							<td>{ formatInt(x.year) }</td>
							<td>{ pricePerSquareMeter(x.price, x.size) } </td>
							<td>{ formatDate(x.firstSeen) }</td>
							<td>{ x.agency }</td>
							<td><a href={ templ.URL(x.url) }>{ x.url }</a></td>
						</tr>
					}
				</tbody>
			</table>
		</body>
	</html>
	<script>
        // On initial load stuff

        const agencyName = "agency"
        const priceMinName = "price_min";
        const priceMaxName = "price_max";
        const yearMinName = "year_min";
        const yearMaxName = "year_max";
        const areaMinName = "size_value_min";
        const areaMaxName = "size_value_max";
        const priceOverAreaMinName = "price_over_area_min";
        const priceOverAreaMaxName = "price_over_area_max";
        const includeDeletedName = "include_deleted";
        const orderByName = "order_by";
        const sortOrderName = "sort_order";

        const query = window.location.search;
        const params = new URLSearchParams(query);

        const agency = params.get(agencyName) ?? '';
        const priceMin = params.get(priceMinName);
        const priceMax = params.get(priceMaxName);
        const yearMin = params.get(yearMinName);
        const yearMax = params.get(yearMaxName);
        const areaMin = params.get(areaMinName);
        const areaMax = params.get(areaMaxName);
        const priceOverAreaMin = params.get(priceOverAreaMinName);
        const priceOverAreaMax = params.get(priceOverAreaMaxName);
        const includeDeleted = params.get(includeDeletedName);
        const orderBy = params.get(orderByName);
        const sortOrder = params.get(sortOrderName);

        document.getElementById(agencyName).value = agency;
        document.getElementById(priceMinName).value = priceMin;
        document.getElementById(priceMaxName).value = priceMax;
        document.getElementById(yearMinName).value = yearMin;
        document.getElementById(yearMaxName).value = yearMax;
        document.getElementById(areaMinName).value = areaMin;
        document.getElementById(areaMaxName).value = areaMax;
        document.getElementById(priceOverAreaMinName).value = price_over_area_min;
        document.getElementById(priceOverAreaMaxName).value = price_over_area_max;
        document.getElementById(includeDeletedName).checked = includeDeleted === "true";
        document.getElementById(orderByName).value = orderBy;
        document.getElementById(sortOrderName).value = sortOrder;


        // Interactive stuff

        let searchForm = document.getElementById('search');

        // Remove all empty form fields from the GET query
        window.addEventListener('load', function() {
            searchForm.addEventListener('formdata', function(event) {
              let formData = event.formData;
              for (let [name, value] of Array.from(formData.entries())) {
                if (value === '') formData.delete(name);
              }
            });
        });

        // Add sort_by and sort_order query parameters and submit the search form
        function sort(field) {
            const orderByInput = document.getElementById('order_by')
            const sortOrderInput = document.getElementById('sort_order')

            orderByInput.value = field;

            if (orderByInput.value === field) {
                sortOrderInput.value = sortOrderInput.value === "desc" ? "asc" : "desc";
            }
            else {
                sortOrderInput.value = "desc";
            }
            searchForm.submit();
        }
    </script>
}

func formatInt(value int) string {
	if value < 0 {
		return ""
	}
	return strconv.Itoa(value)
}

func formatFloat(value float32) string {
	if value < 0 {
		return ""
	}
	return fmt.Sprintf("%.0f", value)
}
func formatDate(value string) string {
	t, err := time.Parse("2006-01-02 15:04:05.999999", value)
	if err != nil {
		panic(err.Error())
	}
	formatted := t.Format("1 Jan 2006")
	return formatted
}

func pricePerSquareMeter(price int, size Size) string {
	if size.unit != "m2" || size.value < 0 || price < 0 {
		return ""
	}

	result := float32(price) / size.value
	return formatFloat(result)
}
